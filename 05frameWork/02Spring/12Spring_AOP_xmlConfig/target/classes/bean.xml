<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--    配置Spring的IOC，把service对象配置紧来-->
    <bean id="accountService" class="cn.kk.service.impl.AccountServiceImpl"></bean>

    <!--
            Spring中基于XML的AOP配置
                1. 通知类bean交给容器管理
                2. 使用aop:config 标签
                    1. 作于：表明开始AOP的配置
                3. 使用aop:aspect 标签
                    1. 作用表明开始配置切面
                    2. 属性：
                        1. id：给切面的唯一标识
                        2. ref：指定通知类bean的id
                4. 在sop:aspect标签内部配置通知的类型
                    1. aop:before
    -->
    <!-- 1. -->
    <bean id="logger" class="cn.kk.utils.Logger"></bean>

    <!-- 2. -->
    <aop:config>
        <!-- 配置切面-->
        <aop:aspect id="logAdvice" ref="logger">
            <!-- 配置通知的类型,并且建立通知方法和切入点方法的关联-->
            <!--<aop:before method="printLog" pointcut="execution( * cn.kk.service.IAccountService.saveAccount())"></aop:before>-->
            <!--<aop:before method="printLog" pointcut="execution( * *..*.*(int))"></aop:before>-->
            <aop:before method="printLog" pointcut="execution( * *..*.*(*))"></aop:before>
            <!--<aop:before method="printLog" pointcut="execution(* *..*.*(..))"></aop:before>-->
        </aop:aspect>
    </aop:config>
</beans>